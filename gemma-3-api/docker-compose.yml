version: '3.8'

services:
  gemma_service:
    build: .
    image: gemma-3-api
    container_name: gemma_service
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ~/.cache/huggingface:/home/appuser/.cache/huggingface
    environment:
      - HUGGING_FACE_HUB_TOKEN=${HUGGING_FACE_HUB_TOKEN:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_API_BASE=${OPENAI_API_BASE:-}
      - OPENAI_TIMEOUT_SECONDS=${OPENAI_TIMEOUT_SECONDS:-60}
      - OPENAI_WHISPER_MODEL=${OPENAI_WHISPER_MODEL:-gpt-4o-mini-transcribe}
      - OPENAI_WHISPER_RESPONSE_FORMAT=${OPENAI_WHISPER_RESPONSE_FORMAT:-verbose_json}
      - ENABLE_LOCAL_WHISPER=${ENABLE_LOCAL_WHISPER:-false}
      - LOCAL_WHISPER_MODEL=${LOCAL_WHISPER_MODEL:-base}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REQUEST_ID_HEADER=${REQUEST_ID_HEADER:-X-Request-ID}
      - API_KEY_ENABLED=${API_KEY_ENABLED:-false}
      - API_KEY_HEADER_NAME=${API_KEY_HEADER_NAME:-X-API-Key}
      - API_KEYS=${API_KEYS:-}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-false}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-120}
      - RATE_LIMIT_WINDOW_SECONDS=${RATE_LIMIT_WINDOW_SECONDS:-60}
      - RATE_LIMIT_BURST_MULTIPLIER=${RATE_LIMIT_BURST_MULTIPLIER:-1.0}
      - OPENAUDIO_API_KEY=${OPENAUDIO_API_KEY:-}
      - OPENAUDIO_API_BASE=${OPENAUDIO_API_BASE:-http://openaudio:8080}
      - OPENAUDIO_TTS_PATH=${OPENAUDIO_TTS_PATH:-/v1/tts}
      - OPENAUDIO_DEFAULT_FORMAT=${OPENAUDIO_DEFAULT_FORMAT:-wav}
      - OPENAUDIO_DEFAULT_REFERENCE_ID=${OPENAUDIO_DEFAULT_REFERENCE_ID:-}
      - OPENAUDIO_DEFAULT_NORMALIZE=${OPENAUDIO_DEFAULT_NORMALIZE:-true}
      - OPENAUDIO_TIMEOUT_SECONDS=${OPENAUDIO_TIMEOUT_SECONDS:-120}
      - OPENAUDIO_MAX_RETRIES=${OPENAUDIO_MAX_RETRIES:-3}
    # Expose the port to the host machine for direct testing/access
    ports:
      - "6666:6666"
    networks:
      # Connect this service to our shared network
      - shared_services_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6666/health"]
      interval: 15s
      timeout: 10s
      retries: 5

  openaudio:
    image: fishaudio/fish-speech:latest-server-cuda
    container_name: openaudio
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - MODEL_NAME=OpenAudio-S1-mini
    command:
      [
        "python",
        "-m",
        "tools.api_server",
        "--host",
        "0.0.0.0",
        "--port",
        "8080",
        "--model",
        "OpenAudio-S1-mini",
        "--compile",
      ]
    volumes:
      - ./openaudio-checkpoints:/workspace/checkpoints
    networks:
      - shared_services_network
    ports:
      - "8080:8080"

networks:
  # Declare that the network is external and has been created manually
  shared_services_network:
    external: true
